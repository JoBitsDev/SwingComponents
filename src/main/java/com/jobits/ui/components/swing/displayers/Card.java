/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.ui.components.swing.displayers;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.value.ValueModel;
import com.jobits.pos.ui.DefaultValues;
import com.jobits.ui.components.MaterialComponentsFactory;
import com.jobits.ui.components.swing.containers.CollapseMenu;
import com.jobits.ui.components.swing.containers.TaskButton;
import java.awt.AlphaComposite;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import com.jhw.swing.material.standars.MaterialIcons;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Home
 */
public class Card extends javax.swing.JPanel {

    String imageURL, title, secondaryText, mediaURL, supportText;
    Action mainButtonAction, secundaryButtonAction;
    ValueModel valueModel;
    List<Action> menuActionsList = new ArrayList<>();

    /**
     * Creates new form LongCard
     *
     * @param imageURL
     * @param title
     * @param secondaryText
     * @param mediaURL
     * @param supportText
     * @param mainButtonAction
     * @param secundaryButtonAction
     * @param valueModel
     */
    public Card(
            String imageURL,
            String title,
            String secondaryText,
            String mediaURL,
            String supportText,
            Action mainButtonAction,
            Action secundaryButtonAction,
            ValueModel valueModel,
            Action... menuActions) {
        this.imageURL = imageURL;
        this.title = title;
        this.secondaryText = secondaryText;
        this.mediaURL = mediaURL;
        this.supportText = supportText;
        this.mainButtonAction = mainButtonAction;
        this.secundaryButtonAction = secundaryButtonAction;
        this.valueModel = valueModel;
        for (Action menuAction : menuActions) {
            menuActionsList.add(menuAction);
        }

        initComponents();
        setMenuUI();
        setComponentsInfo();

    }

    public Card(String imageURL,
            String title,
            String secondaryText,
            ValueModel valueModel,
            Action... menuActions) {

        this(imageURL, title, secondaryText, null, null, null, null, valueModel, menuActions);
    }

    public Card(String imageURL,
            String title,
            String secondaryText,
            Action... menuActions) {

        this(imageURL, title, secondaryText, null, null, null, null, null, menuActions);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader = new javax.swing.JPanel();
        jLabelIcon = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelCardTitle = MaterialComponentsFactory.Displayers.getH3Label();
        jLabelSecondaryText = MaterialComponentsFactory.Displayers.getLabel();
        jPanelMenu = new javax.swing.JPanel();
        jButtonMenu = new javax.swing.JButton();
        jPanelMedia = new javax.swing.JPanel();
        jLabelMedia = new javax.swing.JLabel();
        jPanelSupportText = new javax.swing.JPanel();
        jLabelSupportText = new javax.swing.JLabel();
        jPanelActionButtons = new javax.swing.JPanel();
        jButtonSecondary = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonPrimary = MaterialComponentsFactory.Buttons.getMaterialButton();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        setMaximumSize(new java.awt.Dimension(32773, 500));
        setMinimumSize(new java.awt.Dimension(256, 55));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanelHeader.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelHeader.setMaximumSize(new java.awt.Dimension(400, 80));
        jPanelHeader.setMinimumSize(new java.awt.Dimension(20, 50));
        jPanelHeader.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanelHeader.setLayout(new java.awt.BorderLayout());

        jLabelIcon.setText("<icon>");
        jLabelIcon.setMaximumSize(new java.awt.Dimension(40, 40));
        jLabelIcon.setMinimumSize(new java.awt.Dimension(40, 40));
        jLabelIcon.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanelHeader.add(jLabelIcon, java.awt.BorderLayout.WEST);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jPanel2.setMaximumSize(new java.awt.Dimension(30000, 30000));
        jPanel2.setMinimumSize(new java.awt.Dimension(150, 40));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jLabelCardTitle.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelCardTitle.setText("<Card Title>");
        jLabelCardTitle.setMaximumSize(new java.awt.Dimension(3000, 3000));
        jLabelCardTitle.setMinimumSize(new java.awt.Dimension(20, 25));
        jLabelCardTitle.setPreferredSize(new java.awt.Dimension(20, 25));
        jPanel2.add(jLabelCardTitle);

        jLabelSecondaryText.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelSecondaryText.setText("<Secondary Text>");
        jLabelSecondaryText.setMaximumSize(new java.awt.Dimension(3000, 3000));
        jLabelSecondaryText.setMinimumSize(new java.awt.Dimension(20, 16));
        jLabelSecondaryText.setPreferredSize(new java.awt.Dimension(20, 16));
        jPanel2.add(jLabelSecondaryText);

        jPanelHeader.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanelMenu.setMaximumSize(new java.awt.Dimension(20, 20));
        jPanelMenu.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanelMenu.setLayout(new java.awt.GridLayout(2, 1));

        jButtonMenu.setBackground(jPanelHeader.getBackground());
        jButtonMenu.setIcon(MaterialIcons.MORE_VERT);
        jButtonMenu.setMaximumSize(new java.awt.Dimension(20, 10));
        jButtonMenu.setMinimumSize(new java.awt.Dimension(20, 10));
        jButtonMenu.setPreferredSize(new java.awt.Dimension(20, 10));
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });
        jPanelMenu.add(jButtonMenu);

        jPanelHeader.add(jPanelMenu, java.awt.BorderLayout.EAST);

        add(jPanelHeader);

        jPanelMedia.setMinimumSize(new java.awt.Dimension(0, 200));
        jPanelMedia.setPreferredSize(new java.awt.Dimension(433, 200));

        jLabelMedia.setText("<Media>");
        jPanelMedia.add(jLabelMedia);

        add(jPanelMedia);

        jPanelSupportText.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelSupportText.setMinimumSize(new java.awt.Dimension(0, 50));

        jLabelSupportText.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelSupportText.setText("<Support Text>");
        jPanelSupportText.add(jLabelSupportText);

        add(jPanelSupportText);

        jPanelActionButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelActionButtons.setMinimumSize(new java.awt.Dimension(0, 25));
        jPanelActionButtons.setPreferredSize(new java.awt.Dimension(169, 25));
        jPanelActionButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonSecondary.setText("jButton1");
        jPanelActionButtons.add(jButtonSecondary);

        jButtonPrimary.setText("jButton2");
        jPanelActionButtons.add(jButtonPrimary);

        add(jPanelActionButtons);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        createPopupPanel();
    }//GEN-LAST:event_jButtonMenuActionPerformed

    public String getTitle() {
        return title;
    }

    public String getSecondaryText() {
        return secondaryText;
    }

    public String getSupportText() {
        return supportText;
    }

    public JLabel getjLabelCardTitle() {
        return jLabelCardTitle;
    }

    private void setComponentsInfo() {

        if (imageURL == null) {
            jLabelIcon.setVisible(false);
        } else {
            jLabelIcon.setIcon(circlarShape(imageURL));
        }
        if (title == null && valueModel == null) {
            jLabelCardTitle.setVisible(false);
        } else if (title != null) {
            jLabelCardTitle.setText(title);
        } else if (valueModel != null) {
            Bindings.bind(jLabelCardTitle, valueModel);
        }
        if (secondaryText == null) {
            jLabelSecondaryText.setVisible(false);
        } else {
            jLabelSecondaryText.setText(secondaryText);
        }
        if (mediaURL == null) {
            jLabelMedia.setVisible(false);
            jPanelMedia.setVisible(false);
        } else {
            jLabelMedia.setIcon(new javax.swing.ImageIcon(mediaURL));
        }
        if (supportText == null) {
            jLabelSupportText.setVisible(false);
            jPanelSupportText.setVisible(false);
        } else {
            jLabelSupportText.setText(supportText);
        }
        if (mainButtonAction == null) {
            jButtonPrimary.setVisible(false);
        } else {
            jButtonPrimary.setAction(mainButtonAction);
        }
        if (secundaryButtonAction == null) {
            jButtonSecondary.setVisible(false);
        } else {
            jButtonSecondary.setAction(secundaryButtonAction);
        }
        if (mainButtonAction == null && secundaryButtonAction == null) {
            jPanelActionButtons.setVisible(false);
        }
        if (menuActionsList.isEmpty()) {
            jButtonMenu.setVisible(false);
            jPanelMenu.setVisible(false);
        } else {
            for (Action action : menuActionsList) {
                jPanelSubActions.add(addMenuItem(action));
            }
        }
    }

    private void setMenuUI() {
        jPanelSubActions = new org.jdesktop.swingx.JXTaskPaneContainer();
        jPopupMenu1 = new javax.swing.JPopupMenu();

        org.jdesktop.swingx.VerticalLayout verticalLayout1 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout1.setGap(14);
        jPanelSubActions.setLayout(verticalLayout1);
    }

    private org.jdesktop.swingx.JXTaskPaneContainer jPanelSubActions;
    private javax.swing.JPopupMenu jPopupMenu1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JButton jButtonPrimary;
    private javax.swing.JButton jButtonSecondary;
    private javax.swing.JLabel jLabelCardTitle;
    private javax.swing.JLabel jLabelIcon;
    private javax.swing.JLabel jLabelMedia;
    private javax.swing.JLabel jLabelSecondaryText;
    private javax.swing.JLabel jLabelSupportText;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelActionButtons;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelMedia;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelSupportText;
    // End of variables declaration//GEN-END:variables

    private Component addMenuItem(Action action) {
        Component c = jPanelSubActions.add(buildFromAction(action));
        jPopupMenu1.add(action);
        return c;
    }

    private Component buildFromAction(Action a) {
        return new TaskButton(a, jPanelSubActions.getWidth());
    }

    private void createPopupPanel() {
        jPopupMenu1.show(this, jButtonMenu.getBounds().x + jButtonMenu.getWidth(), jButtonMenu.getBounds().y);
    }

    public ImageIcon circlarShape(String image) {

        try {
            BufferedImage master = ImageIO.read(new File(image));

            int diameter = Math.min(master.getWidth(), master.getHeight());
            BufferedImage mask = new BufferedImage(master.getWidth(), master.getHeight(), BufferedImage.TYPE_INT_ARGB);

            Graphics2D g2d = mask.createGraphics();
            applyQualityRenderingHints(g2d);
            g2d.fillOval(0, 0, diameter - 1, diameter - 1);
            g2d.dispose();

            BufferedImage masked = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);
            g2d = masked.createGraphics();
            applyQualityRenderingHints(g2d);
            int x = (diameter - master.getWidth()) / 2;
            int y = (diameter - master.getHeight()) / 2;
            g2d.drawImage(master, x, y, null);
            g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_IN));
            g2d.drawImage(mask, 0, 0, null);
            g2d.dispose();

            return new ImageIcon(masked);
        } catch (IOException ex) {
            Logger.getLogger(Card.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    public static void applyQualityRenderingHints(Graphics2D g2d) {

        g2d.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHint(RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);
        g2d.setRenderingHint(RenderingHints.KEY_DITHERING, RenderingHints.VALUE_DITHER_ENABLE);
        g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2d.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);

    }

}
